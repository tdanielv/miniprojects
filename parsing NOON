# -*- coding: cp1251 -*-
import requests
from bs4 import BeautifulSoup
import csv
import sys

CSV = 'cards.csv'
HOST = 'https://www.noon.com/uae-en/'
URL = 'https://www.noon.com/uae-en/fashion/men-31225/shoes-17421/bds-june-fash-FA_03/'
HEADERS = {
    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36'
}

def get_html(url, params=''):
    r = requests.get(url, headers=HEADERS, params=params)
    return r

def get_content(html):
    soup = BeautifulSoup(html, 'html.parser')
    items = soup.find_all('div', class_='productContainer')
    cards = []
    for item in items:
        cards.append(
            {
                'title': item.find('span', class_='').get_text(strip=True),
                'link_product': HOST+item.find('a').get('href'),
                'price': item.find('strong').get_text(strip=True)+' AED',
                'img': item.find('img').get('src')
            }
        )
    return cards

# html = get_html(URL)
# get_content((html.text))
def save_csv(items, path):
    with open(path,'w') as file:
        writer = csv.writer(file, delimiter=';')
        writer.writerow(['Название продукта', 'Ссылка на продукт', 'Цена на продукт', 'Ссылка на изображение'])
        for item in items:
            writer.writerow([item['title'], item['link_product'], item['price'], item['img']])

def parser():
    PAGENATION = input('Укажите количество страниц для парсинга: ')
    PAGENATION = int(PAGENATION.strip())
    LIMIT = int(input('Кажите лимит товаров на тсраницу: '))
    html = get_html(URL)
    if html.status_code == 200:
        cards = []
        for page in range(1, PAGENATION+1):
            print(f'Парсим страницу:{page}')
            html = get_html(URL, params={'page':page, 'limit':LIMIT})
            cards.extend(get_content(html.text))
        save_csv(cards, CSV)
    else:
        print('error')

parser()
